library(reshape2)
matched.names.matrix<-dcast(match.s1.s2.enh,s2.i+s1.i+s2name+s1name~method, value.var = "adist")
View(matched.names.matrix)
install.packages("xlsx")
library(xlsx)
library(xlsx)
file.to.read <- file.choose()
data <- read.xlsx(file.to.read, sheetIndex = 1, endRow = 23)
var_means <- colMeans(data[, 2:65])
stand_dev <- sapply(data[,2:65], sd)
n <- nrow(data)
m <- ncol(data)
data_norm <- as.data.frame(matrix(nrow = n, ncol = m))
##Normalizing (x-colMean)/ColdevStand
##This could be done with scale() function
for(i in 1:n){##rows
for(j in 2:m){##columns
mean <- var_means[j-1]
dev_std <- stand_dev[j-1]
data_norm[i, j] <- ifelse(dev_std == 0, 0,
(data[i, j]-mean)/dev_std)
}
}
data_norm <- cbind(data$ID, data_norm[, -1])##binding names cases
data_norm_means <- colMeans(data_norm[, -1])
m <- ncol(data_norm)
n <- nrow(data_norm)
data_signal <- as.data.frame(matrix(nrow = n, ncol = m))
##Transforming signal by sigmoide function
for(i in 1:n){##rows
for(j in 2:m){##columns
mean <- data_norm_means[j-1]
data_signal[i, j] <- 1/(1+exp(-data_norm[i, j]-mean))
}
}
data_signal[, 1] <- data$ID
points <- data_signal[, 2:9]
straight <- data_signal[, 10:17]
angle <- data_signal[, 18:25]
curves <- data_signal[, 26:33]
cross <- data_signal[, 34:41]
parallel <- data_signal[, 42:49]
rays <- data_signal[, 50:57]
square <- data_signal[, 58:65]
critic <- (-angle+curves+1)/2
self_confidence <- (-points+straight+cross+1)/3
expansion <- (rays-square+1)/2
objetive <- (-angle+parallel-rays+2)/3
organized <- (parallel-rays+square+1)/3
adaptable <- (-angle+curves+1)/2
mental_activ <- (straight+parallel)/2
constancy <- (parallel+square)/2
self_control <- (-angle+square+1)/2
wise <- (straight-angle+parallel+square+1)/4
synthesis <- (straight+cross+square)/3
vars <- list("adaptable", "constancy", "critic", "expansion", "mental_activ",
"objetive", "organized", "self_confidence", "self_control", "synthesis",
"wise")
patterns <- c("points", "straight", "angle", "curves", "cross", "parallel", "rays",
"square")
rm(list = patterns)
##Writing to Jesus interface
write.xlsx(critic, "critic.xlsx")
write.xlsx(self_confidence, "self_confidence.xlsx")
write.xlsx(expansion, "expansion.xlsx")
write.xlsx(objetive, "objetive.xlsx")
write.xlsx(organized, "organied.xlsx")
write.xlsx(adaptable, "adaptable.xlsx")
write.xlsx(mental_activ, "mental_activ.xlsx")
write.xlsx(constancy, "constancy.xlsx")
write.xlsx(self_control, "self_control.xlsx")
write.xlsx(wise, "wise.xlsx")
write.xlsx(synthesis, "synthesis.xlsx")
file.to.read <- file.choose()
data <- read.xlsx(file.to.read, sheetIndex = 13)[,-c(2,3)]
data <- read.xlsx(file.to.read, sheetIndex = 13)[,c(-2,-3)]
data <- read.xlsx(file.to.read, sheetIndex = 13)
data <- read.xlsx(file.to.read, sheetIndex = 1)[,-c(2,3)]
View(data)
library(dplyr)
data <- subset(data, ID != NA)
View(data)
?read.xlsx
data <- read.xlsx(file.to.read, sheetIndex = 1)[,-c(2,3)]
sum(data$ID != "NA")
sum(data$ID != NA)
data$ID != NA
data$ID != "NA"
View(data)
data <- subset(data, ID != "NA")
View(data)
var_means <- colMeans(data[, 2:65])
stand_dev <- sapply(data[,2:65], sd)
n <- nrow(data)
m <- ncol(data)
data_norm <- as.data.frame(matrix(nrow = n, ncol = m))
##Normalizing (x-colMean)/ColdevStand
##This could be done with scale() function
for(i in 1:n){##rows
for(j in 2:m){##columns
mean <- var_means[j-1]
dev_std <- stand_dev[j-1]
data_norm[i, j] <- ifelse(dev_std == 0, 0,
(data[i, j]-mean)/dev_std)
}
}
data_norm <- cbind(data$ID, data_norm[, -1])##binding names cases
data_norm_means <- colMeans(data_norm[, -1])
m <- ncol(data_norm)
n <- nrow(data_norm)
data_signal <- as.data.frame(matrix(nrow = n, ncol = m))
##Transforming signal by sigmoide function
for(i in 1:n){##rows
for(j in 2:m){##columns
mean <- data_norm_means[j-1]
data_signal[i, j] <- 1/(1+exp(-data_norm[i, j]-mean))
}
}
data_signal[, 1] <- data$ID
points <- data_signal[, 2:9]
straight <- data_signal[, 10:17]
angle <- data_signal[, 18:25]
curves <- data_signal[, 26:33]
cross <- data_signal[, 34:41]
parallel <- data_signal[, 42:49]
rays <- data_signal[, 50:57]
square <- data_signal[, 58:65]
critic <- (-angle+curves+1)/2
self_confidence <- (-points+straight+cross+1)/3
expansion <- (rays-square+1)/2
objetive <- (-angle+parallel-rays+2)/3
organized <- (parallel-rays+square+1)/3
adaptable <- (-angle+curves+1)/2
mental_activ <- (straight+parallel)/2
constancy <- (parallel+square)/2
self_control <- (-angle+square+1)/2
wise <- (straight-angle+parallel+square+1)/4
synthesis <- (straight+cross+square)/3
vars <- list("adaptable", "constancy", "critic", "expansion", "mental_activ",
"objetive", "organized", "self_confidence", "self_control", "synthesis",
"wise")
patterns <- c("points", "straight", "angle", "curves", "cross", "parallel", "rays",
"square")
rm(list = patterns)
##Writing to Jesus interface
write.xlsx(critic, "critic.xlsx")
write.xlsx(self_confidence, "self_confidence.xlsx")
write.xlsx(expansion, "expansion.xlsx")
write.xlsx(objetive, "objetive.xlsx")
write.xlsx(organized, "organied.xlsx")
write.xlsx(adaptable, "adaptable.xlsx")
write.xlsx(mental_activ, "mental_activ.xlsx")
write.xlsx(constancy, "constancy.xlsx")
write.xlsx(self_control, "self_control.xlsx")
write.xlsx(wise, "wise.xlsx")
write.xlsx(synthesis, "synthesis.xlsx")
file.to.read
df.path <- choose.file()
df.path <- file.choose()
df <- read.csv(df.path)
head(df)
hist(df)
?hist
hist(df$steps)
tail(df)
hist(df$steps, breaks = df$date)
str(df)
hist(df$steps, breaks = df$interval)
hist(df$steps, breaks = df$interval, xlim = c(0:2355))
hist(df$steps, breaks = df$interval, xlim = c0:2355)
hist(df$steps, breaks = df$interval, xlim = 0:2355)
library(dplyr)
?group_by
df.1 <- group_by(df, date)
summarise(df.1, sum(df.1$steps))
df.2 <- summarise(df.1, sum(df.1$steps))
hist(df.2$`sum(df.1$steps)`)
hist(as.numeric(df.2$`sum(df.1$steps)`))
hist(as.numeric(df.2$`sum(df.1$steps)`), breaks = df.2$breaks)
str(df.2)
sum(is.na(df.2$`sum(df.1$steps)`))
df$steps
df.1$steps
df.2$`sum(df.1$steps)`
?sum
df.2 <- summarise(df.1, sum(df.1$steps, na.rm = TRUE))
hist(as.numeric(df.2$`sum(df.1$steps)`))
hist(as.numeric(df.2$`sum(df.1$steps)`), breaks = df.2$date)
df.2$date
str(df.2)
?hist.Date
hist.Date(df.2$`sum(df.1$steps, na.rm = TRUE)`)
?hist
hist(df.2)
hist(df.2$date)
hist(df.2$`sum(df.1$steps, na.rm = TRUE)`)
hist(df.2$`sum(df.1$steps, na.rm = TRUE)`, freq = FALSE)
hist(df.2$`sum(df.1$steps, na.rm = TRUE)`, freq = FALSE, breaks = df.2$date)
hist(df.2$`sum(df.1$steps, na.rm = TRUE)`, freq = FALSE, breaks = c(1:61))
hist(df.2$`sum(df.1$steps, na.rm = TRUE)`, freq = FALSE, breaks = c(1:60))
hist(df.2$`sum(df.1$steps, na.rm = TRUE)`)
hist(df.2$`sum(df.1$steps, na.rm = TRUE)`, freq = FALSE)
View(df.2)
hist(df.2$date)
hist(df.2$`sum(df.1$steps, na.rm = TRUE)`)
View(df)
df$steps > 0
sum(df$steps > 0)
sum(df$steps > 0, na.rm = T)
View(df.1)
sum(df.1$steps > 0, na.rm = T)
df.2 <- summarise(df.1, sum(steps, na.rm = FALSE))
hist(df.2$`sum(steps, na.rm = FALSE)`)
hist(df.2$`sum(steps, na.rm = FALSE)`, breaks = df.2$date)
hist(df.2$`sum(steps, na.rm = FALSE)`, breaks = seq(1:61))
library(ggplot2)
?hist
qplot(df.2$`sum(steps, na.rm = FALSE)`, ggeom = "histogram")
qplot(df.2$`sum(steps, na.rm = FALSE)`, geom = "histogram")
max(df.2$`sum(steps, na.rm = FALSE)`)
max(df.2$`sum(steps, na.rm = FALSE)`, na.rm = TRUE)
grep(21194, df.2$`sum(steps, na.rm = FALSE)`)
qplot(df.2$`sum(steps, na.rm = FALSE)`, binwidth = 5, xlim = c(0:17568))
qplot(df.2$`sum(steps, na.rm = FALSE)`, binwidth = 1, xlim = df.2$date)
qplot(df.2$`sum(steps, na.rm = FALSE)`, breaks = 61)
df.2$`sum(steps, na.rm = FALSE)` <- if(df.2$`sum(steps, na.rm = FALSE)` == "NA")0
is(df.2$`sum(steps, na.rm = FALSE)` == "NA")
is(df.2$`sum(steps, na.rm = FALSE)` == NA)
hist(df.2$date, "days")
hist(df.2$`sum(steps, na.rm = FALSE)`, "days")
plot(df.2$`sum(steps, na.rm = FALSE)`)
qplot(`sum(steps, na.rm = FALSE)`, data = df.2)
library(ggplot2)
qplot(`sum(steps, na.rm = FALSE)`, data = df.2)
ggplot(df.2, aes(date, df.2$`sum(steps, na.rm = FALSE)`) + geom_line() + scale_x_date(format = "%b-%Y") + xlab("") + ylab("Daily views"))
wd()
?wd
getwd()
?read.csv
path.file <- file.choose()
df <- read.csv(path.file)
file <- unzip(path.file, files = "activity.csv")
df <- read.csv(file)
View(df)
path.file <- file.choose()
file <- unzip(path.file, files = "activity.csv")
df <- read.csv(file)
View(df)
str(df)
df.by.date <- group_by(df, date)
library(dplyr)
df.by.date <- group_by(df, date)
?group_by
df.by.date <- summarise(group_by(df, date), sum = sum(steps))
View(df.by.date)
df.by.date <- summarise(group_by(df, date), sum = sum(steps), interval = interval)
df.by.date <- summarise(group_by(df, date), sum = sum(steps), interval = max(interval))
View(df.by.date)
df.by.date <- summarise(group_by(df, date), sum = sum(steps))
View(df.by.date)
df.complete <- df.by.date[complete.cases(df.by.date$sum),]
View(df.complete)
df.by.date.complete <- df.by.date[complete.cases(df.by.date$sum),]
View(df.by.date.complete)
hist(df.by.date.complete)
hist(df.by.date.complete$sum)
?hist
hist(df.by.date.complete$sum, breaks = df.by.date.complete$date)
hist(df.by.date.complete$sum, breaks = 53)
hist(df.by.date.complete$sum, breaks = 53, axes = F)
library(ggplot2)
ggplot(data = df.by.date.complete, aes(date, sum)
+ geom_line()
+ scale_x_date(format = "%b-%Y")
+ xlab("")
+ ylab("Daily views"))
ggplot(data = df.by.date.complete, aes(date, sum)
+ geom_line()
+ xlab("")
+ ylab("Daily views"))
qplot(data = df.by.date.complete, sum)
plot(df.by.date.complete$sum, df.by.date.complete$date)
plot(df.by.date.complete$date, df.by.date.complete$sum)
?qplot
qplot(df.by.date.complete$date, df.by.date.complete$sum)
qplot(df.by.date.complete$date, df.by.date.complete$sum, geom = "histogram")
ggplot(data = df.by.date.complete, aes(df.by.date.complete$date, df.by.date.complete$sum)
+ geom_line()
+ xlab("")
+ ylab("Daily views"))
head(df.by.date.complete)
str(df.by.date.complete)
qplot(df.by.date.complete$date, df.by.date.complete$sum, geom = "histogram", format = "%d-%M")
library(scales)
df.by.date.complete$date <- as.Date(df.by.date.complete, format = "%m-%d")
df.by.date.complete$date <- as.Date(df.by.date.complete, format = "%Y-%m-%d")
df.by.date.complete$date <- strftime(df.by.date.complete, format = "%m-%d")
df.by.date.complete$date <- as.Date(df.by.date.complete$date, format = "%Y-%m-%d")
qplot(df.by.date.complete$date, df.by.date.complete$sum, geom = "histogram")
hist(df.by.date.complete$date)
hist(df.by.date.complete$date, breaks = "days")
ggplot(df.by.date.complete, aes(date, sum) + geom_histogram())
ggplot(df.by.date.complete, aes(date, sum) + geom_histogram() + scale_x_date(labels = date_format("%m-%d") + breaks = "days"))
ggplot(df.by.date.complete, aes(date, sum) + geom_histogram() + scale_x_date(labels = date_format("%m-%d")) + breaks = "days")
ggplot(df.by.date.complete, aes(date, sum) + geom_histogram() + scale_x_date(labels = date_format("%m-%d")))
freqs <- aggregate(df.by.date.complete$date, by=list(df.by.date.complete$date), FUN=length)
freqs$names <- as.Date(df.by.date.complete$date, format="%Y-%m-%d")
ggplot(freqs, aes(x=names, y=x)) + geom_bar(stat="identity") +
scale_x_date(breaks="1 month", labels=date_format("%Y-%b"),
limits=c(as.Date("2012-10-02"),as.Date("2012-11-29"))) +
ylab("Frequency") + xlab("Year and Month") +
theme_bw() + opts(axis.text.x = theme_text(angle=90))
ggplot(freqs, aes(x=names, y=x)) + geom_bar(stat="identity") +
scale_x_date(breaks="1 month", labels=date_format("%Y-%b"),
limits=c(as.Date("2012-10-02"),as.Date("2012-11-29"))) +
ylab("Frequency") + xlab("Year and Month") +
theme_bw() + opts(axis.text.x = theme_text(angle=90)))
ggplot(freqs, aes(x=names, y=x)) + geom_bar(stat="identity") +
scale_x_date(breaks="1 month", labels=date_format("%Y-%b"),
limits=c(as.Date("2012-10-02"),as.Date("2012-11-29"))) +
ylab("Frequency") + xlab("Year and Month") +
theme_bw()
qplot(df.by.date.complete, date)
plot(df.by.date.complete$date, df.by.date.complete$sum)
hist(df.by.date.complete$date)
hist(df.by.date.complete$date, breaks = "days")
hist(df.by.date.complete$date, breaks = "1 month")
hist(df.by.date.complete$date, breaks = df.by.date.complete$date)
hist(df.by.date.complete$sum)
hist(df.by.date.complete$date)
ggplot(df.by.date.complete, aes(x = steps)) +
geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
ggplot(df.by.date.complete, aes(x = sum)) +
geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
ggplot(df.by.date.complete, aes(x = date)) +
geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
ggplot(df.by.date.complete, aes(x = sum)) +
geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
ggplot(df.by.date.complete, aes(x = sum)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
## Please, choose the file to load from the box that will appears
path.file <- file.choose()
## Unzip the file
file <- unzip(path.file, files = "activity.csv")
## Readding the file
df <- read.csv(file)
## Grouping and summarizing the df by each day the sum of the steps
library(dplyr)
df.by.date <- summarise(group_by(df, date), sum = sum(steps))
## Removing the rows with steps = NA
df.by.date.complete <- df.by.date[complete.cases(df.by.date$sum),]
df.by.date.complete$date <- as.Date(df.by.date.complete$date, format = "%Y-%m-%d")
## What is mean total number of steps taken per day?
## The histogram shows the frecuency of the steps per day
libary(ggplot2)
ggplot(df.by.date.complete, aes(x = sum)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
## Please, choose the file to load from the box that will appears
path.file <- file.choose()
## Unzip the file
file <- unzip(path.file, files = "activity.csv")
## Readding the file
df <- read.csv(file)
## Grouping and summarizing the df by each day the sum of the steps
library(dplyr)
df.by.date <- summarise(group_by(df, date), sum = sum(steps))
## Removing the rows with steps = NA
df.by.date.complete <- df.by.date[complete.cases(df.by.date$sum),]
df.by.date.complete$date <- as.Date(df.by.date.complete$date, format = "%Y-%m-%d")
## What is mean total number of steps taken per day?
## The histogram shows the frecuency of the steps per day
library(ggplot2)
ggplot(df.by.date.complete, aes(x = sum)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
## Please, choose the file to load from the box that will appears
path.file <- file.choose()
## Unzip the file
file <- unzip(path.file, files = "activity.csv")
## Readding the file
df <- read.csv(file)
## Grouping and summarizing the df by each day the sum of the steps
library(dplyr)
df.by.date <- summarise(group_by(df, date), sum = sum(steps))
## Removing the rows with steps = NA
df.by.date.complete <- df.by.date[complete.cases(df.by.date$sum),]
df.by.date.complete$date <- as.Date(df.by.date.complete$date, format = "%Y-%m-%d")
## What is mean total number of steps taken per day?
## The histogram shows the frecuency of the steps per day
library(ggplot2)
ggplot(df.by.date.complete, aes(x = sum)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
path.file <- file.choose()
file <- unzip(path.file, files = "activity.csv")
df <- read.csv(file)
## Grouping and summarizing the df by each day the sum of the steps
library(dplyr)
df.by.date <- summarise(group_by(df, date), sum = sum(steps))
## Removing the rows with steps = NA
df.by.date.complete <- df.by.date[complete.cases(df.by.date$sum),]
df.by.date.complete$date <- as.Date(df.by.date.complete$date, format = "%Y-%m-%d")
## What is mean total number of steps taken per day?
## The histogram shows the frecuency of the steps per day
library(ggplot2)
ggplot(df.by.date.complete, aes(x = sum)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
path.file <- file.choose()
## Unzip the file
file <- unzip(path.file, files = "activity.csv")
## Readding the file
df <- read.csv(file)
## Grouping and summarizing the df by each day the sum of the steps
library(dplyr)
df.by.date <- summarise(group_by(df, date), sum = sum(steps))
## Removing the rows with steps = NA
df.by.date <- df.by.date[complete.cases(df.by.date$sum),]
df.by.date$date <- as.Date(df.by.date$date, format = "%Y-%m-%d")
## What is mean total number of steps taken per day?
## The histogram shows the frecuency of the steps per day
library(ggplot2)
ggplot(df.by.date, aes(x = sum)) +
geom_histogram(binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
df.mean <- summarise(group_by(df, date), mean = mean(steps, na.rm = T))
View(df.mean)
install.packages("memoise")
df.mean
file <- unzip("activity.zip", files = "activity.csv")
setwd("~/Documents/reproducible research/RepData_PeerAssessment1")
df <- read.csv(file)
file <- unzip("activity.zip", files = "activity.csv")
df <- read.csv(file)
View(df)
df.by.interval <- summarise(group_by(df, interval), mean = mean(steps))
library(dplyr)
df.by.interval <- summarise(group_by(df, interval), mean = mean(steps))
View(df.by.interval)
plot(df.by.interval$mean, mean)
plot(df.by.interval$mean, df.by.interval$mean)
sum(is.na(df))
sum(is.na(df$steps))
df.full <- df
nas <- is.na(df.full$steps)
interval.mean <- tapply(df.full$steps, df.full$interval, mean, na.rm=TRUE, simplify=TRUE)
data.full$steps[nas] <- interval.mean[as.character(df.full$interval[nas])]
df.full <- df
nas <- is.na(df.full$steps)
interval.mean <- tapply(df.full$steps, df.full$interval, mean, na.rm=TRUE, simplify=TRUE)
df.full$steps[nas] <- interval.mean[as.character(df.full$interval[nas])]
View(df.full)
?tapply
df.by.date.2 <. cbind(df.by.date, "incomplete")
df.by.date.2 <- cbind(df.by.date, "incomplete")
df.2 <- cbind(df, "incomplete")
View(df.2)
df.by.date <- summarise(group_by(df, date), sum = sum(steps))
df.by.date <- df.by.date[complete.cases(df.by.date$sum),]
df.by.date.2 <- cbind(df.by.date, "incomplete")
df.full.2 <- cbind(df.full, "complete")
df.plot <- rbind(df.by.date.2, df.full.2)
View(df.by.date)
df.by.date.2 <- cbind(df.by.date, "incomplete")
df.full.2 <- cbind(df.full[,1:2], "complete")
df.by.date.2 <- cbind(df.by.date, "incomplete")
df.full.2 <- cbind(df.full[,1:2], "complete")
df.plot <- rbind(df.by.date.2, df.full.2)
names(df.full.2) <- names(df.by.date.2)
df.plot <- rbind(df.by.date.2, df.full.2)
View(df.full.2)
View(df.by.date.2)
View(df.by.date)
df.full.2 <- df.full.2[c(2,1,3)]
names(df.full.2) <- names(df.by.date.2)
df.plot <- rbind(df.by.date.2, df.full.2)
View(df.plot)
str(df.by.date.2)
str(df.full.2)
head(df.by.date.2)
head(df.full.2)
head(df.by.date.2)
head(df.full.2)
str(df.by.date.2)
str(df.full.2)
